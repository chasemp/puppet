[DEFAULT]

network_api_class = nova.network.neutronv2.api.API
# tell nova not to try to do its own firewall management
firewall_driver = nova.virt.firewall.NoopFirewallDriver
# instead for fw use neutron
security_group_api = neutron

linuxnet_interface_driver = nova.network.linux_net.LinuxBridgeInterfaceDriver

#####

my_ip=<%= @novaconfig["my_ip"] %>

dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova
force_dhcp_release=True
iscsi_helper=tgtadm
libvirt_use_virtio_for_bridges=True
connection_type=libvirt
root_helper=sudo nova-rootwrap /etc/nova/rootwrap.conf
verbose=True
ec2_private_dns_show_ip=True
api_paste_config=/etc/nova/api-paste.ini
volumes_path=/var/lib/nova/volumes
enabled_apis=ec2,osapi_compute,metadata
rpc_backend = rabbit
auth_strategy = keystone

# COMPUTE
compute_driver=libvirt.LibvirtDriver

[keystone_authtoken]
auth_plugin = password
auth_host = <%= @novaconfig['controller_hostname'] %>
auth_protocol = http
auth_port = 35357
admin_user = novaadmin
admin_tenant_name = admin
project_name = admin
admin_password = nimdaavon
project_domain_id = default
user_domain_id = default
auth_uri = http://192.168.1.200:5000/v3
auth_url = http://192.168.1.200:35357

[oslo_messaging_rabbit]
rabbit_host=<%= @novaconfig["rabbit_host"] %>
rabbit_port = 5672
rabbit_use_ssl = False
rabbit_userid = <%= @novaconfig["rabbit_user"] %>
rabbit_password = <%= @novaconfig["rabbit_pass"] %>

[oslo_concurrency]
lock_path=/var/lock/nova

[glance]
host = <%= @novaconfig['controller_hostname'] %>
